import api from '../lib/api'
import { logger } from '../lib/logger'

export interface ConteudoAula {
  conteudo_aula_id?: string
  aula_id: string
  descricao: string
  conteudo: string
  created_at?: string
  updated_at?: string
}

export interface ConteudoAulaResponse {
  sucesso: boolean
  mensagem: string
  dados?: ConteudoAula | ConteudoAula[]
  total?: number
}

class ConteudoAulaService {
  /**
   * Listar todos os conte√∫dos de aula
   */
  static async listarConteudos(): Promise<ConteudoAulaResponse> {
    try {
      logger.info('üìö Listando conte√∫dos de aula', 'service')
      const response = await api.get('/conteudo-aula')
      return response.data
    } catch (error) {
      logger.error('‚ùå Erro ao listar conte√∫dos', 'service', error)
      throw error
    }
  }

  /**
   * Buscar conte√∫do por ID
   */
  static async buscarConteudoPorId(conteudoId: string): Promise<ConteudoAulaResponse> {
    try {
      logger.info(`üîç Buscando conte√∫do: ${conteudoId}`, 'service')
      const response = await api.get(`/conteudo-aula/${conteudoId}`)
      return response.data
    } catch (error) {
      logger.error('‚ùå Erro ao buscar conte√∫do', 'service', error)
      throw error
    }
  }

  /**
   * Buscar conte√∫dos por aula
   */
  static async buscarConteudosPorAula(aulaId: string): Promise<ConteudoAulaResponse> {
    try {
      logger.info(`üîç Buscando conte√∫dos da aula: ${aulaId}`, 'service')
      const response = await api.get(`/conteudo-aula/aula/${aulaId}`)
      return response.data
    } catch (error) {
      logger.error('‚ùå Erro ao buscar conte√∫dos por aula', 'service', error)
      throw error
    }
  }

  /**
   * Criar novo conte√∫do de aula
   */
  static async criarConteudo(dadosConteudo: {
    aula_id: string
    descricao: string
    conteudo: string
  }): Promise<ConteudoAulaResponse> {
    try {
      logger.info(`üìù Criando conte√∫do: ${dadosConteudo.descricao}`, 'service')
      const response = await api.post('/conteudo-aula', dadosConteudo)
      return response.data
    } catch (error) {
      logger.error('‚ùå Erro ao criar conte√∫do', 'service', error)
      throw error
    }
  }

  /**
   * Atualizar conte√∫do de aula
   */
  static async atualizarConteudo(conteudoId: string, dadosConteudo: {
    descricao?: string
    conteudo?: string
  }): Promise<ConteudoAulaResponse> {
    try {
      logger.info(`üìù Atualizando conte√∫do: ${conteudoId}`, 'service')
      const response = await api.put(`/conteudo-aula/${conteudoId}`, dadosConteudo)
      return response.data
    } catch (error) {
      logger.error('‚ùå Erro ao atualizar conte√∫do', 'service', error)
      throw error
    }
  }

  /**
   * Deletar conte√∫do de aula
   */
  static async deletarConteudo(conteudoId: string): Promise<ConteudoAulaResponse> {
    try {
      logger.info(`üóëÔ∏è Deletando conte√∫do: ${conteudoId}`, 'service')
      const response = await api.delete(`/conteudo-aula/${conteudoId}`)
      return response.data
    } catch (error) {
      logger.error('‚ùå Erro ao deletar conte√∫do', 'service', error)
      throw error
    }
  }
}

export default ConteudoAulaService
